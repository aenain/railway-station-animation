- 2.times do
  %br/

%section.passenger
  %ul.params
    %li.group
      %ul
        %li{ style: 'width: 30%' }
          .param
            .before
              %span.nowrap Probability of
              %span.nowrap having a ticket

            = attribute_field(f, :average_probability_of_having_ticket, class: 'knob')

        %li{ style: 'width: 70%' }
          .label
            People with tickets come
            = hidden_attribute_range_fields(f, :coming_time_span_with_ticket)
            minutes before a train.

          = attribute_range_field(f, :coming_time_span_with_ticket, class: 'slider')

          .label
            People without tickets come
            = hidden_attribute_range_fields(f, :coming_time_span_without_ticket)
            minutes before a train.

          = attribute_range_field(f, :coming_time_span_without_ticket, class: 'slider')

    %li.group
      %ul
        %li{ style: 'width: 30%' }
          .param
            .before
              %span.nowrap Probability of
              %span.nowrap complaining
            = attribute_field(f, :average_probability_of_complaining, class: 'knob-danger')

        %li{ style: 'width: 70%' }
          .label
            Serving informations takes
            = hidden_attribute_range_fields(f, :serving_information_time)
            minutes.

          = attribute_range_field(f, :serving_information_time, class: 'slider')

          .label
            Selling tickets takes
            = hidden_attribute_range_fields(f, :selling_ticket_time)
            minutes.

          = attribute_range_field(f, :selling_ticket_time, class: 'slider')

    - 4.times do
      %br/

    %li.group
      %ul.params-2
        %li
          .param
            .before
              %span.nowrap Go to the waiting room
              %span.nowrap when more than

            = attribute_field(f, :go_to_waiting_room_min_time_span, class: 'knob')
            .after minutes to the train.
          

        %li
          .param
            .before
              %span.nowrap Go to the platform
              %span.nowrap when less than
            = attribute_field(f, :go_to_platform_max_time_span, class: 'knob')
            .after minutes to the train.

    %li.group
      %ul.params-2
        %li
          .param
            .before
              %span.nowrap Probability of
              %span.nowrap having companions
            = attribute_field(f, :average_probability_of_having_companion, class: 'knob')

        %li
          .param
            .before
              %span.nowrap Maximum
              %br/
              %span.nowrap companions
            = attribute_field(f, :max_companion_count, class: 'knob')

    - 4.times do
      %br/

    %li
      .param
        .before
          %span.nowrap Share of people who are not interested in the particular train.
          %br/
          %span.nowrap They come to get some informations and/or buy tickets.
        = attribute_field(f, :average_share_of_visitors, class: 'knob-big')

- 4.times do
  %br/

%section.train
  %ul.params
    %li
      .label
        = hidden_attribute_range_fields(f, :arriving_passenger_count)
        people arrive to the station in a single train.

      = attribute_range_field(f, :arriving_passenger_count, class: 'slider')

    %li
      .label
        = hidden_attribute_range_fields(f, :departuring_passenger_count)
        people departure from the station in a single train.

      = attribute_range_field(f, :departuring_passenger_count, class: 'slider')

    %li
      .label
        Trains can be delayed
        = hidden_attribute_range_fields(f, :external_delay)
        minutes before they get to the station's semaphore.

      = attribute_range_field(f, :external_delay, class: 'slider')

    %li.group
      %ul.params-4
        %li
          .param
            .before
              %span.nowrap Probability of train's
              %span.nowrap external delay
            = attribute_field(f, :average_probability_of_external_delay, class: 'knob')

        %li
          .param
            .before
              Train's external delay is known
            = attribute_field(f, :external_delay_info_time_span, class: 'knob')
            .after
              minutes before the scheduled semaphore arrival time.

        %li
          .param
            .before
              Train needs
            = attribute_field(f, :internal_arrival_time, class: 'knob')
            .after
              minutes to ride from the semaphore to its platform.

        %li
          .param
            .before
              Train arrives
            = attribute_field(f, :default_platform_waiting_time, class: 'knob')
            .after
              minutes before leaving if arrival or departure time is undefined.

    %li
      .label
        - if read_only
          .cd-dropdown
            %span= f.object.scheduling_algorithm || "None of the algorithms has been chosen."

        - else
          = f.select :scheduling_algorithm, Simulation::SCHEDULING_ALGORITHMS.to_a.map(&:reverse), prompt: 'Choose a scheduling algorithm'

- 4.times do
  %br/

%section.variables
  %ul.params
    %li.group
      %ul.params-3
        %li
          .param
            .before
              Platforms
            = attribute_field(f, :platform_count, class: 'knob')
        %li
          .param
            .before
              Info desks
            = attribute_field(f, :info_desk_count, class: 'knob')
        %li
          .param
            .before
              Cash desks
            = attribute_field(f, :cash_desk_count, class: 'knob')

    %li
      .param
        .before
          %span.nowrap Waiting room
          %span.nowrap capacity
        = attribute_field(f, :waiting_room_capacity, class: 'knob-big')

- unless read_only
  :coffeescript
    $ ->
      $('#simulation_scheduling_algorithm').dropdown(
        gutter: 0
        stack: false
      )